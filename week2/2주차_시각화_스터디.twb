<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0217.1203                               -->
<workbook original-version='18.1' source-build='2020.4.2 (20204.21.0217.1203)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='서울시 코로나19 확진자 현황 (시각화스터디_2주차_서울시 코로나19 확진자 현황)' inline='true' name='federated.1xmqf5g0f5c03y1b43mty03jq03s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='시각화스터디_2주차_서울시 코로나19 확진자 현황' name='excel-direct.1xz08go0yqxxdd0zrx97z0vdjli9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/foxgi/OneDrive/바탕 화면/데이터분석공부/dalc_데이터시각화_스터디/시각화스터디_2주차_서울시 코로나19 확진자 현황.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1xz08go0yqxxdd0zrx97z0vdjli9' name='서울시 코로나19 확진자 현황' table='[&apos;서울시 코로나19 확진자 현황$&apos;]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='연번' ordinal='0' />
            <column datatype='date' name='확진일' ordinal='1' />
            <column datatype='string' name='지역' ordinal='2' />
            <column datatype='string' name='여행력' ordinal='3' />
            <column datatype='string' name='접촉력' ordinal='4' />
            <column datatype='string' name='조치사항' ordinal='5' />
            <column datatype='datetime' name='등록일' ordinal='6' />
            <column datatype='datetime' name='수정일' ordinal='7' />
            <column datatype='string' name='노출여부' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1xz08go0yqxxdd0zrx97z0vdjli9' name='서울시 코로나19 확진자 현황' table='[&apos;서울시 코로나19 확진자 현황$&apos;]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='연번' ordinal='0' />
            <column datatype='date' name='확진일' ordinal='1' />
            <column datatype='string' name='지역' ordinal='2' />
            <column datatype='string' name='여행력' ordinal='3' />
            <column datatype='string' name='접촉력' ordinal='4' />
            <column datatype='string' name='조치사항' ordinal='5' />
            <column datatype='datetime' name='등록일' ordinal='6' />
            <column datatype='datetime' name='수정일' ordinal='7' />
            <column datatype='string' name='노출여부' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>연번</remote-name>
            <remote-type>20</remote-type>
            <local-name>[연번]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>연번</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>확진일</remote-name>
            <remote-type>7</remote-type>
            <local-name>[확진일]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>확진일</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>지역</remote-name>
            <remote-type>130</remote-type>
            <local-name>[지역]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>지역</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LKO_RKR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>여행력</remote-name>
            <remote-type>130</remote-type>
            <local-name>[여행력]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>여행력</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LKO_RKR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>접촉력</remote-name>
            <remote-type>130</remote-type>
            <local-name>[접촉력]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>접촉력</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LKO_RKR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>조치사항</remote-name>
            <remote-type>130</remote-type>
            <local-name>[조치사항]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>조치사항</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LKO_RKR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>등록일</remote-name>
            <remote-type>7</remote-type>
            <local-name>[등록일]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>등록일</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>수정일</remote-name>
            <remote-type>7</remote-type>
            <local-name>[수정일]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>수정일</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>노출여부</remote-name>
            <remote-type>130</remote-type>
            <local-name>[노출여부]</local-name>
            <parent-name>[서울시 코로나19 확진자 현황]</parent-name>
            <remote-alias>노출여부</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LKO_RKR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='서울시 코로나19 확진자 현황' datatype='table' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
      <column datatype='string' name='[여행력]' role='dimension' type='nominal' />
      <column datatype='string' name='[지역]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column-instance column='[여행력]' derivation='None' name='[none:여행력:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='ko_KR' class='hyper' dbname='C:/Users/foxgi/OneDrive/바탕 화면/데이터분석공부/dalc_데이터시각화_스터디/서울시 코로나19 확진자 현황 (시각화스터디_2주차_서울시 코로나19 확진자 현황).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/16/2021 09:13:31 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='서울시 코로나19 확진자 현황 (시각화스터디_2주차_서울시 코로나19 확진자 현황)' increment-value='%null%' refresh-type='create' rows-inserted='29837' timestamp-start='2021-03-16 09:13:31.034' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>연번</remote-name>
              <remote-type>20</remote-type>
              <local-name>[연번]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>연번</remote-alias>
              <ordinal>0</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29837</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>확진일</remote-name>
              <remote-type>133</remote-type>
              <local-name>[확진일]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>확진일</remote-alias>
              <ordinal>1</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>598</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>지역</remote-name>
              <remote-type>129</remote-type>
              <local-name>[지역]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>지역</remote-alias>
              <ordinal>2</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LKO_RKR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>여행력</remote-name>
              <remote-type>129</remote-type>
              <local-name>[여행력]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>여행력</remote-alias>
              <ordinal>3</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>183</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LKO_RKR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>접촉력</remote-name>
              <remote-type>129</remote-type>
              <local-name>[접촉력]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>접촉력</remote-alias>
              <ordinal>4</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>665</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LKO_RKR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>조치사항</remote-name>
              <remote-type>129</remote-type>
              <local-name>[조치사항]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>조치사항</remote-alias>
              <ordinal>5</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LKO_RKR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>등록일</remote-name>
              <remote-type>135</remote-type>
              <local-name>[등록일]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>등록일</remote-alias>
              <ordinal>6</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>수정일</remote-name>
              <remote-type>135</remote-type>
              <local-name>[수정일]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>수정일</remote-alias>
              <ordinal>7</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>노출여부</remote-name>
              <remote-type>129</remote-type>
              <local-name>[노출여부]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>노출여부</remote-alias>
              <ordinal>8</ordinal>
              <family>서울시 코로나19 확진자 현황</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LKO_RKR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:여행력:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;나이지리아&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;미국&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;스페인&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;에티오피아&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;체코&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;파키스탄&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;리투아니아&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;불가리아터키&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;아제르바이잔&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;이집트&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;크로아티아&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;홍콩&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;가나&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;모로코&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;세네갈&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;알제리&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;인도네시아&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;태국&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;덴마크&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;미국LA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;싱가포르&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;오스트리아 모로코 프랑스&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;캄보디아&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;프랑스&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;남아공&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;미국 멕시코&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;스페인 카타르&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;영국&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;체코 헝가리 오스트리아 이탈리아 프랑스&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;페루&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;가봉&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;모로코 터키&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;수단&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;에디오피아&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;일본&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;터키&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;루마니아&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;벨기에&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;아이티공화국&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;이라크&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;콩고민주공화국&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;호주&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21263&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;말레이시아 인도네시아&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;브라질&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;아제르바히잔&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;이탈리아&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;키르기스스탄&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;러시아&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;베트남&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;아르헨티나 볼리비아 브라질&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;우크라이나&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;콜롬비아&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;필리핀&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;과테말라&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;모리타니아&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;스리랑카&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;에콰도르&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;적도기니&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;튀니지&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;독일&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;미얀마&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;싱가폴&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;요르단&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;캐나다&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;프랑스 독일&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;독일 프랑스&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;바레인&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;아랍에미리트&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;우간다&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;케냐&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;프랑스 스페인 이탈리아 독일 네덜란드&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;레바논&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;베트남 사이공&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;아시아&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;유럽&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;콩고&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;헝가리&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;르완다&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;벨라루스&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;아일랜드&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;이란&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;쿠웨이트&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;호주 인도네시아&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;네덜란드&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;미국 브라질&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;시리아&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;오세아니아&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;카자흐스탄&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;포르투갈&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;기타&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;몰타&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;스웨덴&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;에티오피나&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;중국&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;파라과이&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28238&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;멕시코&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;브라질아르헨티아칠레볼리비아&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;아프리카&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;이탈리아 프랑스&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;키르기즈스탄&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;두바이&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;방글라데시&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;아르헨티나&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;우즈베키스탄&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;코트디부아르&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;핀란드&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;네팔&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;미국 캐나다 멕시코&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;시에라리온&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;오스트리아&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;카타르&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;폴란드&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;멕시코 미국&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;사우디아라비아&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;알바니아&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;인도&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;탄자니아&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;대한민국&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='서울시 코로나19 확진자 현황' id='서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403'>
            <properties context=''>
              <relation connection='excel-direct.1xz08go0yqxxdd0zrx97z0vdjli9' name='서울시 코로나19 확진자 현황' table='[&apos;서울시 코로나19 확진자 현황$&apos;]' type='table'>
                <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='연번' ordinal='0' />
                  <column datatype='date' name='확진일' ordinal='1' />
                  <column datatype='string' name='지역' ordinal='2' />
                  <column datatype='string' name='여행력' ordinal='3' />
                  <column datatype='string' name='접촉력' ordinal='4' />
                  <column datatype='string' name='조치사항' ordinal='5' />
                  <column datatype='datetime' name='등록일' ordinal='6' />
                  <column datatype='datetime' name='수정일' ordinal='7' />
                  <column datatype='string' name='노출여부' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='라인차트'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>월별</run>
            <run fontcolor='#4e79a7'> 확진자 수 추이</run>
            <run> 살펴보기</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='서울시 코로나19 확진자 현황 (시각화스터디_2주차_서울시 코로나19 확진자 현황)' name='federated.1xmqf5g0f5c03y1b43mty03jq03s' />
          </datasources>
          <datasource-dependencies datasource='federated.1xmqf5g0f5c03y1b43mty03jq03s'>
            <_.fcp.ObjectModelTableType.false...column caption='서울시 코로나19 확진자 현황' datatype='integer' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='서울시 코로나19 확진자 현황' datatype='table' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[확진일]' derivation='Day' name='[dy:확진일:ok]' pivot='key' type='ordinal' />
            <column-instance column='[확진일]' derivation='Month' name='[mn:확진일:ok]' pivot='key' type='ordinal' />
            <column-instance column='[확진일]' derivation='Year' name='[yr:확진일:ok]' pivot='key' type='ordinal' />
            <column datatype='date' name='[확진일]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[dy:확진일:ok]' value='0' />
            <format attr='text-format' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[dy:확진일:ok]' value='id' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]</rows>
        <cols>([federated.1xmqf5g0f5c03y1b43mty03jq03s].[yr:확진일:ok] / ([federated.1xmqf5g0f5c03y1b43mty03jq03s].[mn:확진일:ok] / [federated.1xmqf5g0f5c03y1b43mty03jq03s].[dy:확진일:ok]))</cols>
      </table>
      <simple-id uuid='{98CBE65C-4833-4D80-99F5-9611B608802E}' />
    </worksheet>
    <worksheet name='맵데이터'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>맵 데이터</run>
            <run>로 보는 </run>
            <run fontcolor='#4e79a7'>지역별</run>
            <run> 확진자 수</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='서울시 코로나19 확진자 현황 (시각화스터디_2주차_서울시 코로나19 확진자 현황)' name='federated.1xmqf5g0f5c03y1b43mty03jq03s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xmqf5g0f5c03y1b43mty03jq03s'>
            <_.fcp.ObjectModelTableType.false...column caption='서울시 코로나19 확진자 현황' datatype='integer' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='서울시 코로나19 확진자 현황' datatype='table' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[지역]' derivation='None' name='[none:지역:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[지역]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Latitude (generated)]</column>
            <column>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Longitude (generated)]' field-type='quantitative' max='14182098.690263292' min='14102588.287265105' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Latitude (generated)]' field-type='quantitative' max='4541930.0711099245' min='4493618.6329383245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:지역:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:지역:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:지역:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:지역:nk]' />
              <color column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
              <geometry column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Latitude (generated)]</rows>
        <cols>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B4DFA51F-B9D3-468A-BE4A-E2E16E72D94A}' />
    </worksheet>
    <worksheet name='트리맵'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>지역</run>
            <run>에 따른 코로나 확진자 </run>
            <run fontcolor='#4e79a7'>비율</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='서울시 코로나19 확진자 현황 (시각화스터디_2주차_서울시 코로나19 확진자 현황)' name='federated.1xmqf5g0f5c03y1b43mty03jq03s' />
          </datasources>
          <datasource-dependencies datasource='federated.1xmqf5g0f5c03y1b43mty03jq03s'>
            <column-instance column='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='서울시 코로나19 확진자 현황' datatype='integer' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <_.fcp.ObjectModelTableType.true...column caption='서울시 코로나19 확진자 현황' datatype='table' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[지역]' derivation='None' name='[none:지역:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[지역]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' max='2000' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[pcto:cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
              <color column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
              <text column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:지역:nk]' />
              <text column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
              <text column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[pcto:cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CF6D06B4-5B50-4F4A-A1B6-31578BC0915F}' />
    </worksheet>
    <worksheet name='파이차트'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>여행력</run>
            <run>으로 알아보는 확진자 수</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='서울시 코로나19 확진자 현황 (시각화스터디_2주차_서울시 코로나19 확진자 현황)' name='federated.1xmqf5g0f5c03y1b43mty03jq03s' />
          </datasources>
          <datasource-dependencies datasource='federated.1xmqf5g0f5c03y1b43mty03jq03s'>
            <_.fcp.ObjectModelTableType.false...column caption='서울시 코로나19 확진자 현황' datatype='integer' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='서울시 코로나19 확진자 현황' datatype='table' name='[__tableau_internal_object_id__].[서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403]' role='measure' type='quantitative' />
            <column-instance column='[여행력]' derivation='None' name='[none:여행력:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[여행력]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:여행력:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:여행력:nk]' />
              <groupfilter function='member' level='[none:여행력:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:여행력:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:여행력:nk]' />
              <wedge-size column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
              <size column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
              <text column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' />
              <text column='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:여행력:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9F4857E4-258A-40F7-9C2F-6A77A96E0BD9}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='라인차트'>
      <cards>
        <edge name='left'>
          <strip size='155'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{E8A22F90-E7D8-4945-BA52-1B9AC9F80705}' />
    </window>
    <window class='worksheet' name='트리맵'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:지역:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED08670E-830E-4115-88C2-B8E0FCBD2913}' />
    </window>
    <window class='worksheet' name='맵데이터'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:지역:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{865C1D40-D26F-47E4-814E-AC4B0654F7E1}' />
    </window>
    <window class='worksheet' maximized='true' name='파이차트'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:여행력:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1xmqf5g0f5c03y1b43mty03jq03s].[__tableau_internal_object_id__].[cnt:서울시 코로나19 확진자 현황_3601A3A4ACCA466B9303A8AB7DCA1403:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xmqf5g0f5c03y1b43mty03jq03s].[none:여행력:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4962497E-2AA9-4CA8-AB44-9CE93A624B57}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='라인차트' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='맵데이터' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='트리맵' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='파이차트' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
